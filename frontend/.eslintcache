[{"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\index.js":"1","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\App.js":"3","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\Footer.jsx":"4","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\Header.jsx":"5","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\HomeScreen.jsx":"6","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\ProductScreen.jsx":"7","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\Rating.jsx":"8","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\store.js":"9","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\reducers\\cartReducer.js":"10","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\reducers\\userReducers.js":"11","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\reducers\\productReducer.js":"12","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\reducers\\orderReducer.js":"13","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\LoginScreen.jsx":"14","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\CartScreen.jsx":"15","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\ShippingScreen.jsx":"16","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\ProfileScreen.jsx":"17","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\RegisterScreen.jsx":"18","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\PaymentScreen.jsx":"19","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.jsx":"20","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\OrderScreen.jsx":"21","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\constants\\orderConstant.js":"22","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\constants\\cartConstant.js":"23","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\constants\\productConstant.js":"24","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\actions\\cartAction.js":"25","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\actions\\orderAction.js":"26","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\actions\\userAction.js":"27","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\shared\\Message.jsx":"28","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\shared\\CheckoutStep.jsx":"29","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\shared\\Loader.jsx":"30"},{"size":596,"mtime":1685700932123,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1682660030331,"results":"33","hashOfConfig":"32"},{"size":1568,"mtime":1685700722921,"results":"34","hashOfConfig":"32"},{"size":504,"mtime":1684741172051,"results":"35","hashOfConfig":"32"},{"size":2415,"mtime":1685699782575,"results":"36","hashOfConfig":"32"},{"size":845,"mtime":1685954928665,"results":"37","hashOfConfig":"32"},{"size":1195,"mtime":1685777253657,"results":"38","hashOfConfig":"32"},{"size":1254,"mtime":1684741165764,"results":"39","hashOfConfig":"32"},{"size":1895,"mtime":1685700787706,"results":"40","hashOfConfig":"32"},{"size":1348,"mtime":1685700623308,"results":"41","hashOfConfig":"32"},{"size":2269,"mtime":1685700675182,"results":"42","hashOfConfig":"32"},{"size":1145,"mtime":1685700661000,"results":"43","hashOfConfig":"32"},{"size":3176,"mtime":1685700643992,"results":"44","hashOfConfig":"32"},{"size":2806,"mtime":1685699351249,"results":"45","hashOfConfig":"32"},{"size":5253,"mtime":1685699348114,"results":"46","hashOfConfig":"32"},{"size":3389,"mtime":1685699473620,"results":"47","hashOfConfig":"32"},{"size":7630,"mtime":1685699433222,"results":"48","hashOfConfig":"32"},{"size":4080,"mtime":1685699453391,"results":"49","hashOfConfig":"32"},{"size":1696,"mtime":1685699386315,"results":"50","hashOfConfig":"32"},{"size":6322,"mtime":1685699407382,"results":"51","hashOfConfig":"32"},{"size":7725,"mtime":1685699368903,"results":"52","hashOfConfig":"32"},{"size":816,"mtime":1685700421872,"results":"53","hashOfConfig":"32"},{"size":240,"mtime":1685700403229,"results":"54","hashOfConfig":"32"},{"size":376,"mtime":1685700441108,"results":"55","hashOfConfig":"32"},{"size":1343,"mtime":1685700164310,"results":"56","hashOfConfig":"32"},{"size":3922,"mtime":1685700181132,"results":"57","hashOfConfig":"32"},{"size":4192,"mtime":1685700227075,"results":"58","hashOfConfig":"32"},{"size":204,"mtime":1685699963492,"results":"59","hashOfConfig":"32"},{"size":1789,"mtime":1685699915486,"results":"60","hashOfConfig":"32"},{"size":486,"mtime":1685699948277,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"5nxw0c",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\index.js",[],["128","129"],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\App.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\Footer.jsx",[],["130","131"],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\Header.jsx",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\HomeScreen.jsx",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\ProductScreen.jsx",[],["132","133"],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\Rating.jsx",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\store.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\LoginScreen.jsx",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\CartScreen.jsx",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\ShippingScreen.jsx",["134"],"import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FromContainer from \"../components/shared/FromContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartAction\";\r\nimport ChekcoutStep from \"../components/shared/CheckoutStep\";\r\nimport CheckoutStep from \"../components/shared/CheckoutStep\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalcode, setPostalcode] = useState(shippingAddress.postalcode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        //dispatch\r\n        dispatch(saveShippingAddress({ address, city, postalcode, country }));\r\n        history.push(\"/payment\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CheckoutStep step1 step2 />\r\n            <FromContainer>\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Address\"\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                            required\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"city\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter City\"\r\n                            value={city}\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                            required\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"postalcode\">\r\n                        <Form.Label>PostalCode</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter postalcode\"\r\n                            value={postalcode}\r\n                            onChange={(e) => setPostalcode(e.target.value)}\r\n                            required\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"country\">\r\n                        <Form.Label>Country</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Country\"\r\n                            value={country}\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                            required\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        continue\r\n                    </Button>\r\n                </Form>\r\n            </FromContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShippingScreen;","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\ProfileScreen.jsx",["135","136","137"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/shared/Message\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userAction\";\r\nimport { listMyOrders } from \"../actions/orderAction\";\r\nimport { ORDER_CREATE_REQUEST } from \"../constants/orderConstant\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy);\r\n    const { loading: loadingOrders, orders, error: errorOrders } = orderListMy;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails(\"profile\"));\r\n                dispatch(listMyOrders());\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [history, userInfo, user, dispatch]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        //dispatch\r\n        dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <h1>Update Information</h1>\r\n                    {error && <Message varient=\"danger\">{error}</Message>}\r\n                    {success && <Message variant=\"success\">Profile Updated</Message>}\r\n                    {loading && <Loader />}\r\n                    {message && <Message variant=\"danger\">{message}</Message>}\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"enter Name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"enter email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"enter password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"confirmPassword\">\r\n                            <Form.Label>COnfirm Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Re-enter password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" varient=\"primary\">\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <h1>My Orders</h1>\r\n                    {loadingOrders ? (\r\n                        <Loader />\r\n                    ) : errorOrders ? (\r\n                        <Message variant=\"danger\">{errorOrders}</Message>\r\n                    ) : (\r\n                        <Table striped bordered hover responsive className=\"table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>ID</td>\r\n                                    <td>DATE</td>\r\n                                    <td>TOTAL</td>\r\n                                    <td>PAID</td>\r\n                                    <td>DELIVERD</td>\r\n                                    <td></td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map((order) => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>{order.totalPrice}</td>\r\n                                        <td>\r\n                                            {order.isPaid ? (\r\n                                                order.paidAt.substring(0, 10)\r\n                                            ) : (\r\n                                                <i\r\n                                                    className=\"fas fa-times\"\r\n                                                    style={{ color: \"red\" }}\r\n                                                ></i>\r\n                                            )}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.isDeleverd ? (\r\n                                                order.deleverdAt.substring(0, 10)\r\n                                            ) : (\r\n                                                <i\r\n                                                    className=\"fas fa-times\"\r\n                                                    style={{ color: \"red\" }}\r\n                                                ></i>\r\n                                            )}\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant=\"light\">Details</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\RegisterScreen.jsx",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\PaymentScreen.jsx",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.jsx",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\screens\\OrderScreen.jsx",["138"],"import React, { useState, useEffect } from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport axios from \"axios\";\r\nimport { ORDER_PAY_RESET } from \"../constants/orderConstant\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/shared/Message\";\r\nimport Loader from \"../components/shared/Loader\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const orderId = match.params.id;\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPay, success: successpay } = orderPay;\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2);\r\n        };\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        );\r\n    }\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(orderId, paymentResult));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const addPaypalScript = async () => {\r\n            const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n            const script = document.createElement(\"script\");\r\n            script.type = \"text/javascript\";\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            };\r\n            document.body.appendChild(script);\r\n        };\r\n        if (!order || successpay) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch(getOrderDetails(orderId));\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [dispatch, orderId, order, successpay]);\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <>\r\n            <h2>Order {order._id}</h2>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup.Item variant=\"flush\">\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                            <strong>Name : </strong>\r\n                            {order.user.name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email : </strong>\r\n                            {order.user.email}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Address :</strong>\r\n                            {order.shippingAddress.address}&nbsp;\r\n                            {order.shippingAddress.city}&nbsp;\r\n                            {order.shippingAddress.postalcode}&nbsp;\r\n                            {order.shippingAddress.country}&nbsp;\r\n                        </p>\r\n                        {order.isDeliverd ? (\r\n                            <Message variant=\"success\">Paid On {order.isDeliverd}</Message>\r\n                        ) : (\r\n                            <Message variant=\"danger\">Not Deliverd</Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                            <strong>Method :</strong>\r\n                            <strong>{order.paymentMethod}</strong>\r\n                        </p>\r\n                        {order.isPaid ? (\r\n                            <Message variant=\"success\">Paid On {order.paidAt}</Message>\r\n                        ) : (\r\n                            <Message variant=\"danger\">Not Paid</Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                        {order.orderItems.length === 0 ? (\r\n                            <Message>Your Cart is Empty</Message>\r\n                        ) : (\r\n                            <ListGroup variant=\"flush\">\r\n                                {order.orderItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} X ${item.price} = ${item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                    {!order.isPaid && (\r\n                        <ListGroup.Item>\r\n                            {loadingPay && <Loader />}\r\n                            {!sdkReady ? (\r\n                                <Loader />\r\n                            ) : (\r\n                                <PayPalButton\r\n                                    amount={order.totalPrice}\r\n                                    onSuccess={successPaymentHandler}\r\n                                />\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderScreen;","C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\constants\\orderConstant.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\constants\\cartConstant.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\constants\\productConstant.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\actions\\cartAction.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\actions\\orderAction.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\shared\\Message.jsx",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\shared\\CheckoutStep.jsx",[],"C:\\Users\\BABA\\Desktop\\ecommerce\\frontend\\src\\components\\shared\\Loader.jsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"141","replacedBy":"144"},{"ruleId":"139","replacedBy":"145"},{"ruleId":"141","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":20},{"ruleId":"147","severity":1,"message":"151","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"152","line":10,"column":10,"nodeType":"149","messageId":"150","endLine":10,"endColumn":30},{"ruleId":"147","severity":1,"message":"153","line":17,"column":21,"nodeType":"149","messageId":"150","endLine":17,"endColumn":31},{"ruleId":"147","severity":1,"message":"154","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":16},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],["155"],["156"],["155"],["156"],"no-unused-vars","'ChekcoutStep' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'ORDER_CREATE_REQUEST' is defined but never used.","'setMessage' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]